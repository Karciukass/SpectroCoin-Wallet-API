{
  "name": "SpectroCoin Wallet API",
  "tagline": "SpectroCoin Bitcoin wallet API specification",
  "body": "# SpectroCoin Bitcoin Wallet API specification\r\n========================\r\nThis document describes [SpectroCoin](https://spectrocoin.com) wallet service API specification.\r\n\r\n# Contents\r\n\r\n* [Requirements](#requirements)\r\n* [API](#api)\r\n   * [Introduction](#introduction)\r\n   * [POST /oauth2/auth](#post-oauth2auth)\r\n   * [POST /oauth2/refresh](#post-oauth2refresh)\r\n   * [POST /wallet/send/{currency}](#post-walletsendcurrency)\r\n   * [GET /wallet/exchange/calculate/buy](#get-walletexchangecalculatebuy)\r\n   * [GET /wallet/exchange/calculate/sell](#get-walletexchangecalculatesell)\r\n   * [POST /wallet/exchange/buy](#post-walletexchangebuy)\r\n   * [POST /wallet/exchange/sell](#post-walletexchangesell)\r\n   * [GET /wallet/accounts](#get-walletaccounts)\r\n   * [GET /wallet/account/{accountId}](#get-walletaccountaccountid)\r\n   * [GET /wallet/deposit/{currency}/last](#get-walletdepositcurrencylast)\r\n   * [GET /wallet/deposit/{currency}/fresh](#get-walletdepositcurrencyfresh)\r\n* [Errors](#errors)\r\n  * [Validation error](#validation-error)\r\n  * [Error codes](#error-codes)\r\n* [Example applications](#example-applications)\r\n\r\n# Requirements\r\n\r\n* Must have a SpectroCoin account ([Sign Up!](https://spectrocoin.com/en/signup.html)) to setup wallet API.\r\n* Must [setup](https://spectrocoin.com/en/walletAPI.html) wallet API instance on SpectroCoin API configuration page.\r\n\r\n# API\r\n\r\nWallet API is REST based web service. Accept ``GET`` or ``POST`` (``application/json``) requests. Responses are ``application/json`` content type.\r\nAPI authentication is performed using OAuth2 (``/oauth2``). Wallet functions is accessible through ``/wallet``.\r\nRoot REST API address: ``https://spectrocoin.com/api/r/``\r\n\r\n### Responses\r\n\r\nWallet API can return specific response object (HTTP **200**), validation error (HTTP **203**), suspicious activity error (HTTP **403**) or internal error (HTTP **500**).\r\n\r\n## Introduction\r\n![](https://github.com/SpectroFinance/SpectroCoin-Wallet-API/blob/master/wallet%20api.jpg)\r\n\r\nSpectroCoin use two services:\r\n  * **Authorization service** ``/oauth2`` - necessary for getting access to wallet api private service methods usage.\r\n  * **Wallet api service** ``/wallet`` - allows user to check account balances, spend, exchange currency together with other wallet related activities.\r\n\r\n## Authorization service\r\n\r\n1. To get access tokens (access and refresh tokens) you must call [**/oath2/auth**](#post-oauth2auth) REST method providing required fields.\r\n2. Response will contain token information (access_token, refresh_token, scope, expires_in..). Having access tokens you can build Authorization header value.\r\n3. All other REST methods within security scope **must have extra HTTP header** - ``Authorization``. Value should start with Bearer space and access token\r\n``Bearer 42e0f8d6cc2f30de2b1dad7cc2df5455b6d05308e6e06495c766dcb43853ba6d17b77b7623899625``\r\n\r\n### Access tokens life time\r\n\r\nThese tokens have a finite lifetime and you must write code to detect when an access token expires. You can do this either by keeping track of the ``expires_in`` value returned in the response from the token request (the value is expressed in seconds), or handle the error response (``1003``) from the API endpoint when an expired token is detected. If access token is expired need to get new token by using refresh token. If refresh token is expired, then need to authenticate from the beginning.\r\n\r\n### Scope\r\nThe scope parameter is used to indicate a list of permissions that are requested by the client. List of scopes should be separated with space. Example: ``send_currency currency_exchange user_account``.\r\n\r\n## POST /oauth2/auth\r\n\r\nMethod to authenticate user and get access tokens to use wallet REST API. Refresh token is used to issue new access tokens when original access token expire.\r\n\r\n### Request\r\n\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\nclient_id\t| String\t|+\t| wallet_8f452af79dcb7fed5979d11cc33910bb\r\nclient_secret |\tString\t| +\t| test-secret\r\nversion |\tString\t| + |\t1.0\r\nscope |\tString\t| +\t| send_currency currency_exchange user_account\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nPOST https://spectrocoin.com/api/r/oauth2/auth\r\nConnection: Keep-Alive\r\nContent-Length: 137\r\nContent-Type: application/json\r\nHost: spectrocoin.com\r\n\r\n{\r\n   \"client_id\": \"wallet_8f452af79dcb7fed5979d11cc33910bb\",\r\n   \"client_secret\": \"test-secret\",\r\n   \"version\": \"1.0\",\r\n   \"scope\": \"user_account send_currency currency_exchange\"\r\n}\r\n\r\n```\r\n### Response\r\n\r\nPossible validation error codes: [1, 1003, 2001](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\naccess_token  |\tString  |\t+ |\t42e0f8d6cc2f30d...2df5455b6d05308e6e064b99625\r\nexpires_in  |\tString\t| +\t| 300 (seconds)\r\nrefresh_token\t| String  |\t+\t| 3cbba02103fb479...21923fe35038ccf4ebbc8fe6084\r\nscope\t| String\t| +\t| send_currency currency_exchange user_account\r\ntoken_type  |\tString\t| -\t| bearer\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n   \"access_token\": \"42e0f8d6cc2f30de2b1dad7cc2df5455b6d05308e6e06495c766dcb43853ba6d17b77b7623899625\",\r\n   \"token_type\": \"bearer\",\r\n   \"expires_in\": 300,\r\n   \"refresh_token\": \"3cbba02103fb47991921923fe350da11299038ccf4ebbc866fc4b2615b46c013a3211509b0fe6084\",\r\n   \"scope\": \"send_currency currency_exchange user_account\"\r\n}\r\n```\r\n\r\n## POST /oauth2/refresh\r\nMethod to exchange user wallet REST API refresh token to new pair of oauth2 tokens.\r\n\r\n### Request\r\n\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\nclient_id\t| String\t| +\t| wallet_8f452af79dcb7fed5979d11cc33910bb\r\nclient_secret\t| String  |\t+ |\ttest-secret\r\nrefresh_token\t| String\t| +\t| cfee255c08b61b08...1588a4de1fc75a89b529619\r\nversion\t| String\t| +\t| 1.0\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nPOST https://spectrocoin.com/api/r/oauth2/refresh\r\nConnection: Keep-Alive\r\nContent-Length: 177\r\nContent-Type: application/json\r\nHost: spectrocoin.com\r\n\r\n{\r\n   \"client_id\": \"wallet_8f452af79dcb7fed5979d11cc33910bb\",\r\n   \"client_secret\": \"test-secret\",\r\n   \"version\": \"1.0\",\r\n   \"refresh_token\": \"cfee255c08b61b08â€¦1588a4de1fc75a89b529619\"\r\n}\r\n```\r\n\r\n### Response\r\n\r\nPossible validation error codes: [1, 1003, 2001, 2003](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\naccess_token\t| String\t| +\t| f6f2e066917...3cd28756350041fd00c8ff741e0c1bf\r\nexpires_in\t| String\t| +\t| 300 (seconds)\r\nrefresh_token\t| String  |\t+\t| f4a74245757...be20d23fc81cff0750613cd319abaf1\r\nscope\t| String  |\t+\t| send_currency currency_exchange user_account\r\ntoken_type  |\tString\t| -\t| bearer\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n   \"access_token\": \"f6f2e0669172035b98a241d6e2afdf531184a400ec8321e1f3cd28756350041fd00c8ff741e0c1bf\",\r\n   \"token_type\": \"bearer\",\r\n   \"expires_in\": 300,\r\n   \"refresh_token\": \"f4a742457578f5d0b029bf39776c8a6b45b43f7bf5e97514cbe20d23fc81cff0750613cd319abaf1\",\r\n   \"scope\": \"send_currency currency_exchange user_account\"\r\n}\r\n```\r\n\r\nValidation example:\r\n```http\r\n[{\r\n   \"code\": 2003,\r\n   \"message\": \"Refresh token expired, please authenticate.\"\r\n}]\r\n```\r\n\r\n## POST /wallet/send/{currency}\r\nOperation to send currency to receiver (bitcoin address, dash address, email address). Additional fees may apply depending on send currency and receiver type. Receiver will receive provided amount and currency if sender has enough balance to cover possible additional fee, otherwise fee will be deducted from send amount. You can provide multiple Bitcoin addresses as receivers to include all payments into one transaction.\r\n\r\n### Security\r\n\r\nSchema\t| Scope\r\n------|-------\r\nOAuth2\t|\tsend_currency\r\n\r\n### Path parameters\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\ncurrency\t| String\t| +\t| EUR, BTC, DASH\r\n\r\n### Request\r\n\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\namount\t| Double\t| +\t| 13.19, 0.00145021\r\nreceiver\t| String  |\t+ |\ttest_cs7@spectrocoin.com, 12KKCFWLPayT8VAbhHRhs7VCS1LPUGGfqv\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nPOST https://spectrocoin.com/api/r/wallet/send/EUR\r\nAuthorization: Bearer 42e0f8d6cc2f30de2b1dad7cc2df5455b6d05308e6e06495c766dcb43853ba6d17b77b7623899625\r\nConnection: Keep-Alive\r\nContent-Length: 47\r\nContent-Type: application/json\r\nHost: spectrocoin.com\r\n\r\n[\r\n  {\r\n\t\"amount\": 0.2,\r\n\t\"receiver\": \"12KKCFWLPayT8VAbhHRhs7VCS1LPUGGfqv\"\r\n  }\r\n]\r\n```\r\n\r\nExample for multiple BTC receivers:\r\n```http\r\nPOST https://spectrocoin.com/api/r/wallet/send/BTC\r\nAuthorization: Bearer 42e0f8d6cc2f30de2b1dad7cc2df5455b6d05308e6e06495c766dcb43853ba6d17b77b7623899625\r\nConnection: Keep-Alive\r\nContent-Length: 47\r\nContent-Type: application/json\r\nHost: spectrocoin.com\r\n\r\n[\r\n  {\r\n\t\"amount\": 0.2,\r\n\t\"receiver\": \"12KKCFWLPayT8VAbhHRhs7VCS1LPUGGfqv\"\r\n  },\r\n  {\r\n\t\"amount\": 0.3,\r\n\t\"receiver\": \"12KKCFWLPayT8VAbhHRhs7VCS1LPUGGfqv\"\r\n  }\r\n]\r\n```\r\n\r\n\r\n### Response\r\n\r\nPossible validation error codes: [1, 1001, 1003, 1004, 1005, 1008, 3001, 3002, 3003, 3005, 3006, 3016, 3017 5003, 5021](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\npaymentId\t| Long\t| +\t| 153\r\nwithdrawAmount\t| Double\t| +\t| 13.19, 0.00145021\r\nreceiveAmount\t| Double  |\t+\t| 13.19, 0.00145021\r\ncurrency\t| String  |\t+\t| EUR, BTC, USD...\r\nstatus  |\tString\t| -\t| Statuses: `NEW`, `PENDING` or `PAID`\r\n\r\n* `NEW` â€“ initial status, should be processed in near future or manually \r\n* `PENDING` â€“ money from sender account is charged and reserved for receiver\r\n* `PAID` â€“ receiver got money\r\n\r\nJSON Response example:\r\n```json\r\n{\r\n   \"paymentId\": \"153\",\r\n   \"withdrawAmount\": 13.19,\r\n   \"receiveAmount\": 13.19,\r\n   \"currency\": \"EUR\",\r\n   \"status\": \"PAID\"\r\n}\r\n```\r\n\r\nValidation example:\r\n```http\r\n[\r\n      {\r\n      \"code\": 1,\r\n      \"message\": \"amount is required\"\r\n   },\r\n      {\r\n      \"code\": 1,\r\n      \"message\": \"receiver is required\"\r\n   }\r\n]\r\n```\r\n\r\n## GET /wallet/exchange/calculate/buy\r\nOperation used to calculate needed pay amount to receive required receive amount at the current moment.\r\n\r\n### Security\r\n\r\nSchema\t| Scope\r\n------|-------\r\nOAuth2\t|\tcurrency_exchange\r\n\r\n### Request\r\n\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\nreceiveAmount\t| Double\t| +\t| 0.00212015, 3.01\r\nreceiveCurrency\t| String  |\t+ |\tBTC\r\npayCurrency | String  |\t+\t|\tEUR\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nGET https://spectrocoin.com/api/r/wallet/exchange/calculate/buy?receiveAmount=3.01&receiveCurrency=USD&payCurrency=EUR\r\nAuthorization: Bearer 42e0f8d6cc2f30de2b1dad7cc2df5455b6d05308e6e06495c766dcb43853ba6d17b77b7623899625\r\nConnection: Keep-Alive\r\nHost: spectrocoin.com\r\n```\r\n\r\n### Response\r\n\r\nPossible validation error codes: [1, 1003, 1004, 1005, 7008](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\npayAmount\t| Double\t| +\t| 2.35\r\npayCurrency\t| String  |\t+\t| EUR\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n   \"payAmount\": 2.35,\r\n   \"payCurrency\": \"EUR\"\r\n}\r\n```\r\n\r\n## GET /wallet/exchange/calculate/sell\r\nOperation used to calculate receive amount of currency exchange using pay amount at the current moment.\r\n\r\n### Security\r\n\r\nSchema\t| Scope\r\n------|-------\r\nOAuth2\t|\tcurrency_exchange\r\n\r\n### Request\r\n\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\npayAmount\t| Double\t| +\t| 10.15, 14.80219015\r\nreceiveCurrency\t| String  |\t+ |\tBTC\r\npayCurrency |\tString\t|\t+\t|\tEUR\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nGET https://spectrocoin.com/api/r/wallet/exchange/calculate/sell?payAmount=10.15&payCurrency=EUR&receiveCurrency=BTC\r\nAuthorization: Bearer 42e0f8d6cc2f30de2b1dad7cc2df5455b6d05308e6e06495c766dcb43853ba6d17b77b7623899625\r\nConnection: Keep-Alive\r\nHost: spectrocoin.com\r\n```\r\n\r\n### Response\r\n\r\nPossible validation error codes: [1, 1003, 1004, 1005, 7008](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\nreceiveAmount\t| Double\t| +\t| 19.23, 0.0001257\r\nreceiveCurrency\t| String  |\t+\t| EUR\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n   \"receiveAmount\": 0.04610103,\r\n   \"receiveCurrency\": \"BTC\"\r\n}\r\n```\r\n\r\n## POST /wallet/exchange/buy\r\nOperation used to buy requested amount of receive currency while paying with pay currency.\r\n\r\n### Security\r\n\r\nSchema\t| Scope\r\n------|-------\r\nOAuth2\t|\tcurrency_exchange\r\n\r\n### Request\r\n\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\nreceiveAmount\t| Double\t| +\t| 3.01, 0.04610103\r\nreceiveCurrency\t| String  |\t+ |\tUSD\r\npayCurrency |\tString\t|\t+\t|\tEUR\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nPOST https://spectrocoin.com/api/r/wallet/exchange/buy\r\nAuthorization: Bearer 42e0f8d6cc2f30de2b1dad7cc2df5455b6d05308e6e06495c766dcb43853ba6d17b77b7623899625\r\nConnection: Keep-Alive\r\nContent-Length: 54\r\nContent-Type: application/json\r\nHost: spectrocoin.com\r\n\r\n{\r\n   \"receiveAmount\": 3.01,\r\n   \"receiveCurrency\": \"USD\",\r\n   \"payCurrency\": \"EUR\"\r\n}\r\n\r\n```\r\n\r\n### Response\r\n\r\nPossible validation error codes: [1, 1001, 1002, 1003, 1004, 1005, 7006, 7007, 7008, 7009, 7010](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\nexchangeId\t|\tLong\t|\t+\t|\t50\r\npayAmount\t| Double\t| +\t| 2.35, 0.046101\r\npayCurrency\t| String  |\t+\t| EUR\r\nreceiveAmount\t| Double\t| +\t| 19.23, 0.0001257\r\nreceiveCurrency\t| String  |\t+\t| USD\r\nstatus  |\tString\t| -\t| Statuses: NEW, PENDING or PAID\r\n\r\n* `NEW` â€“ initial status\r\n* `PENDING` â€“ waiting for approval\r\n* `PAID` â€“ exchange completed\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n   \"exchangeId\": 50,\r\n   \"status\": \"PAID\",\r\n   \"payAmount\": 2.35,\r\n   \"payCurrency\": \"EUR\",\r\n   \"receiveCurrency\": \"USD\",\r\n   \"receiveAmount\": 3.01\r\n}\r\n```\r\n\r\n## POST /wallet/exchange/sell\r\nOperation used to exchange pay currency amount to receive currency.\r\n\r\n### Security\r\n\r\nSchema\t| Scope\r\n------|-------\r\nOAuth2\t|\tcurrency_exchange\r\n\r\n### Request\r\n\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\npayAmount\t| Double\t| +\t| 1.15, 2.35040101\r\nreceiveCurrency\t| String  |\t+ |\tEUR\r\npayCurrency |\tString\t|\t+\t|\tBTC\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nPOST https://spectrocoin.com/api/r/wallet/exchange/sell\r\nAuthorization: Bearer 42e0f8d6cc2f30de2b1dad7cc2df5455b6d05308e6e06495c766dcb43853ba6d17b77b7623899625\r\nConnection: Keep-Alive\r\nContent-Length: 50\r\nContent-Type: application/json\r\nHost: spectrocoin.com\r\n\r\n{\r\n   \"payAmount\": 1.15,\r\n   \"receiveCurrency\": \"BTC\",\r\n   \"payCurrency\": \"EUR\"\r\n}\r\n\r\n```\r\n\r\n### Response\r\n\r\nPossible validation error codes: [1, 1001, 1002, 1003, 1004, 1005, 7006, 7007, 7008, 7009, 7010](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\nexchangeId\t|\tLong\t|\t+\t|\t51\r\npayAmount\t| Double\t| +\t|\t1.15\r\npayCurrency\t| String  |\t+\t| EUR\r\nreceiveAmount\t| Double\t| +\t| 0.00522326\r\nreceiveCurrency\t| String  |\t+\t| BTC\r\nstatus  |\tString\t| +\t| Statuses: `NEW`, `PENDING` or `PAID`\r\n\r\n* `NEW` â€“ initial status\r\n* `PENDING` â€“ waiting for approval\r\n* `PAID` â€“ exchange completed\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n   \"exchangeId\": 51,\r\n   \"status\": \"PAID\",\r\n   \"payAmount\": 1.15,\r\n   \"payCurrency\": \"EUR\",\r\n   \"receiveCurrency\": \"BTC\",\r\n   \"receiveAmount\": 0.00522326\r\n}\r\n```\r\n\r\n## GET /wallet/accounts\r\nOperation used to get user accounts information.\r\n\r\n### Security\r\n\r\nSchema\t| Scope\r\n------|-------\r\nOAuth2\t|\tuser_account\r\n\r\n### Request\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nGET https://spectrocoin.com/api/r/wallet/accounts\r\nAuthorization: Bearer f6f2e0669172035b98a241d6e2afdf531184a400ec8321e1f3cd28756350041fd00c8ff741e0c1bf\r\nConnection: Keep-Alive\r\nHost: spectrocoin.com\r\n```\r\n\r\n### Response\r\nResponse is an array of accounts. Account structure is defined bellow.\r\n\r\nPossible validation error codes: [1, 1003, 1004](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\naccountId\t|\tLong\t|\t+\t|\t2626\r\nbalance\t| Double\t| +\t|\t351.76\r\navailableBalance\t| Double\t| +\t|\t351.76\r\nreservedAmount\t| Double\t| -\t|\t0\r\ncurrencyName\t| String  |\t+\t| Euro\r\ncurrencyCode\t| String  |\t+\t| EUR\r\ncurrencySymbol  |\tString\t| -\t| â‚¬\r\n\r\nJSON Response example:\r\n```http\r\n{\"accounts\": [\r\n   {\r\n      \"accountId\": 1505,\r\n      \"balance\": 1677.11,\r\n      \"currencyName\": \"EURO\",\r\n      \"currencyCode\": \"EUR\",\r\n      \"availableBalance\": 1677.11,\r\n      \"reservedAmount\": 0\r\n   },\r\n    {\r\n      \"accountId\": 2625,\r\n      \"balance\": 104.49,\r\n      \"currencyName\": \"GBP\",\r\n      \"currencyCode\": \"GBP\",\r\n      \"availableBalance\": 104.49,\r\n      \"reservedAmount\": 0\r\n   },\r\n    {\r\n      \"accountId\": 2503,\r\n      \"balance\": 25.76161379,\r\n      \"currencyName\": \"Bitcoin\",\r\n      \"currencyCode\": \"BTC\",\r\n      \"availableBalance\": 17.76161379,\r\n      \"reservedAmount\": 18\r\n   },\r\n    {\r\n      \"accountId\": 2583,\r\n      \"balance\": 627.51,\r\n      \"currencyName\": \"USD\",\r\n      \"currencyCode\": \"USD\",\r\n      \"availableBalance\": 627.51,\r\n      \"reservedAmount\": 0\r\n   }\r\n]}\r\n```\r\n\r\n## GET /wallet/account/{accountId}\r\nOperation used to get paged transaction history of user account.\r\n\r\n### Security\r\n\r\nSchema\t| Scope|\r\n------|-------|\r\nOAuth2\t|\tuser_account|\r\n\r\n### Path parameters\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\naccountId\t|\tLong\t|\t+\t|\t2626\r\n\r\n### Request\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\npage\t|\tInteger\t|\t+\t|\t1\r\nsize\t|\tInteger\t|\t+\t|\t4\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nGET https://spectrocoin.com/api/r/wallet/account/1505?page=1&size=4\r\nAuthorization: Bearer f6f2e0669172035b98a241d6e2afdf531184a400ec8321e1f3cd28756350041fd00c8ff741e0c1bf\r\nConnection: Keep-Alive\r\nHost: spectrocoin.com\r\n```\r\n\r\n### Response\r\nResponse is an array of transaction info and total transactions count. Historical data is returned in descending order. If user donâ€™t define page and size in request by default we return first 25 records. History structure is defined bellow.\r\n\r\nPossible validation error codes: [1, 1003, 1004, 6001](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\ntotalCount\t|\tLong\t|\t+\t|\t425\r\nhistory\t| Array of **History structure**\t| - | |\r\n\r\n#### History structure\r\n\r\n|Field\t| Type  |\tAlways return\t| Example|\r\n|------|-------|---------------|--------|\r\n|transactionId\t|\tString\t|\t+\t|\tSC000004848|\r\n|amount\t|\tDouble\t|\t+\t|\t-1.15|\r\n|description\t|\tString\t|\t+\t|\tEUR sell for exchange. 1.15 EUR|\r\n|date\t|\tDate\t|\t+\t|\t2016-03-10T14:27:31.000Z|\r\n|status  |\tString\t| +\t| Statuses: `PENDING`, `PROCESSED`  or `FAILED`|\r\n\r\n* `PENDING`  â€“ waiting for action\r\n* `PROCESSED` â€“ transaction completed\r\n* `FAILED` â€“ transaction incomplete for some reason\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n   \"totalCount\": 425,\r\n   \"history\":    \r\n   [\r\n      {\r\n         \"transactionNo\": \"SC000004848\",\r\n         \"status\": \"PROCESSED\",\r\n         \"amount\": -1.15,\r\n         \"description\": \"EUR sell for exchange. 1.15 EUR\",\r\n         \"date\": \"2016-03-10T14:27:31.000Z\"\r\n      },\r\n      {\r\n         \"transactionNo\": \"SC000004846\",\r\n         \"status\": \"PROCESSED\",\r\n         \"amount\": -2.35,\r\n         \"description\": \"EUR sell for exchange. 2.35 EUR\",\r\n         \"date\": \"2016-03-10T14:18:12.000Z\"\r\n      },\r\n      {\r\n         \"transactionNo\": \"SC000004841\",\r\n         \"status\": \"PROCESSED\",\r\n         \"amount\": -13.19,\r\n         \"description\": \"EUR sell for exchange. 13.19 EUR\",\r\n         \"date\": \"2016-03-10T14:12:40.000Z\"\r\n      },\r\n      {\r\n         \"transactionNo\": \"SC000004776\",\r\n         \"status\": \"PROCESSED\",\r\n         \"amount\": -1.01,\r\n         \"description\": \"EUR sell for exchange. 1.01 EUR\",\r\n         \"date\": \"2016-03-09T14:39:13.000Z\"\r\n      }\r\n   ]}\r\n```\r\n## GET /wallet/deposit/{currency}/last\r\nOperation used to get last crypto deposit address.\r\n\r\n### Security\r\n\r\nSchema\t| Scope|\r\n------|-------|\r\nOAuth2\t|\tuser_account|\r\n\r\n### Path parameters\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\ncurrency\t| String\t| +\t| BTC, DASH\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nGET https://spectrocoin.com/api/r/wallet/deposit/BTC/last\r\nAuthorization: Bearer f6f2e0669172035b98a241d6e2afdf531184a400ec8321e1f3cd28756350041fd00c8ff741e0c1bf\r\nConnection: Keep-Alive\r\nHost: spectrocoin.com\r\n```\r\n### Response\r\nReturn last crypto address.\r\n\r\nPossible validation error codes: [1, 1003, 1004, 1012](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\nbtcAddress\t|\tString\t|\t-\t|\t1M4bqMd471TTwNtUSeHPhSW5qQy1Y48p5b\r\ncryptoAddress\t|\tString\t|\t+\t|\t1M4bqMd471TTwNtUSeHPhSW5qQy1Y48p5b\r\ncurrency\t|\tString\t|\t+\t|\tBTC\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n\t\"btcAddress\": \"1M4bqMd471TTwNtUSeHPhSW5qQy1Y48p5b\",\r\n\t\"cryptoAddress\": \"1M4bqMd471TTwNtUSeHPhSW5qQy1Y48p5b\",\r\n\t\"currency\": \"BTC\",\r\n}\r\n```\r\nor\r\n```http\r\n{\r\n\t\"cryptoAddress\": \"Xxbit2NkZ4YfAyrgWCSQtRzDjvPJyPFZ4n\",\r\n\t\"currency\": \"DASH\",\r\n}\r\n```\r\n\r\n## GET /wallet/deposit/{currency}/fresh\r\nOperation used to get new crypto deposit address.\r\n\r\n### Security\r\n\r\nSchema\t| Scope|\r\n------|-------|\r\nOAuth2\t|\tuser_account|\r\n\r\n### Path parameters\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\ncurrency\t| String\t| +\t| BTC, DASH\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nGET https://spectrocoin.com/api/r/wallet/deposit/BTC/fresh\r\nAuthorization: Bearer f6f2e0669172035b98a241d6e2afdf531184a400ec8321e1f3cd28756350041fd00c8ff741e0c1bf\r\nConnection: Keep-Alive\r\nHost: spectrocoin.com\r\n```\r\n### Response\r\nReturn new Bitcoin address.\r\n\r\nPossible validation error codes: [1, 1003, 1004, 1012](#error-codes)\r\n\r\nField\t| Type  |\tAlways return\t| Example\r\n------|-------|---------------|--------\r\nbtcAddress\t|\tString\t|\t-\t|\t1Bm3ENaZrtrExi56ywM6DWKQgJDmsrMQ41\r\ncryptoAddress\t|\tString\t|\t+\t|\t1Bm3ENaZrtrExi56ywM6DWKQgJDmsrMQ41\r\ncurrency\t|\tString\t|\t+\t|\tBTC\r\n\r\nJSON Response example:\r\n```http\r\n{\r\n\t\"btcAddress\": \"1Bm3ENaZrtrExi56ywM6DWKQgJDmsrMQ41\",\r\n\t\"cryptoAddress\": \"1Bm3ENaZrtrExi56ywM6DWKQgJDmsrMQ41\",\r\n\t\"currency\": \"BTC\",\r\n}\r\n```\r\nor\r\n\r\n```http\r\n{\r\n\t\"cryptoAddress\": \"Xxbit2NkZ4YfAyrgWCSQtRzDjvPJyPFZ4n\",\r\n\t\"currency\": \"DASH\",\r\n}\r\n```\r\n\r\n## Errors\r\nInvalid request or internal errors will result HTTP response with code **500**.\r\n\r\n### Validation error\r\nValidation errors will result HTTP response with code **203**. Response is an array of error information:\r\n\r\nField\t| Type\t| Required  |\tExample\r\n------|-------|-----------|--------\r\ncode\t| Short\t| +\t| 1\r\nmessage\t| String\t| +\t| Unable to sell Bitcoin\r\n\r\nJSON Response example:\r\n```http\r\n[\r\n\t{\r\n\t  \"code\":1005,\r\n\t  \"message\":\"Unknown value: BTR\"\r\n\t}\r\n]\r\n```\r\n\r\n### Error codes\r\nCurrent available error codes:\r\n\r\nCode | Message\r\n------|-------\r\n1\t|\t Invalid validation (dynamic message)\r\n97\t|\t Unsupported media type\r\n100\t|\t Unexpected error\r\n1001\t|  {value} can't be null\r\n1002\t|\t {amount} should be more than zero\r\n1003\t|\t Forbidden\r\n1004\t|\t Unauthorized\r\n1005\t|\t Unknown value: ???\r\n1008\t|\t Amount should be more than {amount} {currency}\r\n1012\t|\t{currency} is not crypto currency!\r\n2001\t|\t Specified client not found for this credentials. client_id: {client_id}, version: {version}\r\n2002\t|\t Application for this user is disabled\r\n2003\t|\t Refresh token expired, please authenticate\r\n3001\t|\t Balance not enough to send\r\n3002\t|\t Invalid email or address\r\n3003\t|\t Invalid email address\r\n3006\t|\t Amount too small to send\r\n3016\t|  Destination count reached. Max allowed destinations: {count}\r\n3017\t|  Data have empty fields\r\n5003\t|\t User not verified\r\n5021\t|  Unsupported multiple coins send to email address\r\n6001\t|\t Member account {accountId} not found for this user.\r\n7006\t|\t Exceeds {period} user pay limit! - {amount} {currency}\r\n7007\t|\t Exceeds {period} user receive limit! - {amount} {currency}\r\n7008\t|\t Unsupported currency exchange.\r\n7009\t|\t Pay amount can't be smaller than {amount} {currency}\r\n7010\t|\t Receive amount can't be smaller than {amount} {currency}\r\n\r\n\r\n# Example applications\r\n\r\nThere are several sample SpectroCoin wallet API client applications. You should customize them for your needs.\r\n\r\n## Java\r\n\r\nSample SpectroCoin Wallet Java application could be found [here](https://github.com/SpectroFinance/SpectroCoin-Wallet-Java).\r\n\r\n## PHP\r\n\r\nSample PHP application **coming soon**.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}